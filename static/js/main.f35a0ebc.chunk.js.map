{"version":3,"sources":["components/Header.js","components/Todo.js","components/TodoList.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","memo","props","useState","text","setText","addTodo","isCheckedAll","className","placeholder","value","onChange","e","target","onKeyPress","key","id","Date","valueOf","isCompleted","onAddTodo","checked","Todo","todo","getTodoEditingId","todoEditingId","onEditTodo","index","markCompleted","removeTodo","isEditing","editTodo","type","onBlur","onDoubleClick","onClick","TodoList","todoList","checkAllTodo","htmlFor","map","Footer","status","setStatusFilter","numOfTodoLeft","clearCompleted","filterBtns","title","isActive","link","btn","FilterBtn","href","isNotCheckedAll","todos","find","filterByStatus","filter","App","state","setState","preState","list","splice","updateList","this","length","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f35a0ebc.chunk.js","sourcesContent":["import React, { memo, useState } from 'react'\r\n\r\nconst Header = memo(props => {\r\n    const [text, setText] = useState('')\r\n    const { addTodo, isCheckedAll } = props\r\n    const onAddTodo = (e = {}) =>{\r\n        if(e.key === 'Enter' && text) {\r\n            addTodo({\r\n                id: new Date().valueOf(),\r\n                text,\r\n                isCompleted: false\r\n            })\r\n            setText('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>Todo App</h1> \r\n            <input \r\n                className=\"new-todo\"\r\n                placeholder=\"Enter a todo name here\"\r\n                //type=\"checkbox\"\r\n                value = {text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                onKeyPress={(e) => onAddTodo(e)}\r\n                checked ={isCheckedAll}\r\n            />\r\n        </header>\r\n       \r\n    )\r\n})\r\n\r\nexport default Header","import React, { memo, useState } from 'react'\r\n\r\nconst Todo = memo(props => {\r\n    const {todo, getTodoEditingId, todoEditingId, onEditTodo, index, markCompleted, removeTodo} = props\r\n    const [text, setText] = useState(todo.text)\r\n    const isEditing = todoEditingId === todo.id\r\n    const editTodo = () => {\r\n        onEditTodo({\r\n            ...todo,\r\n            text\r\n        }, index)\r\n    }\r\n    \r\n    return (\r\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? ' completed' : ''}`}>\r\n            {!isEditing ?\r\n                <div className=\"view\">\r\n                    <input \r\n                        className=\"toggle\" \r\n                        type=\"checkbox\" \r\n                        checked={todo.isCompleted}\r\n                        onChange={() => markCompleted(todo.id)}\r\n                    />\r\n                    <label onDoubleClick={() => getTodoEditingId(todo.id)}>{todo.text}</label>\r\n                    <button className=\"destroy\" onClick={() => removeTodo(todo.id)}></button>\r\n                </div> :\r\n                \r\n                <input \r\n                    className=\"edit\" \r\n                    type=\"text\" \r\n                    value ={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    onBlur={editTodo}\r\n                    onKeyPress={(e) => {\r\n                        if(e.key === 'Enter')\r\n                        {\r\n                            editTodo()\r\n                        }\r\n                    }}\r\n                />\r\n            }\r\n        </li>\r\n    )\r\n})\r\n\r\nexport default Todo","import React, { memo } from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = memo(props => {\r\n    const {todoList, isCheckedAll, checkAllTodo}   = props \r\n    return (\r\n        <section className=\"main\">\r\n            <input className=\"toggle-all\" type=\"checkbox\" checked={isCheckedAll}/>\r\n            <label htmlFor=\"toggle-all\" onClick={checkAllTodo}>Toggle All</label>\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    todoList.map ((todo, index ) => <Todo key={`todo${todo.id}`} {...{todo}} {...props} index={index}/>)\r\n                }\r\n            </ul>\r\n        </section>\r\n    )\r\n})\r\n\r\nexport default TodoList\r\n\r\n","import React, { memo } from 'react'\r\n\r\nconst Footer = memo(props => { \r\n    const { status, setStatusFilter, numOfTodoLeft,  clearCompleted } = props\r\n    const filterBtns = [\r\n    {\r\n        title: 'All',\r\n        isActive: status === 'ALL',\r\n        onClick: () => setStatusFilter('ALL'),\r\n        link: ''\r\n    },\r\n    \r\n    {\r\n        title: 'Active',\r\n        isActive: status === 'ACTIVE',\r\n        onClick: () => setStatusFilter('ACTIVE'),\r\n        link: 'active'\r\n    },\r\n\r\n    {\r\n        title: 'Done',\r\n        isActive: status === 'DONE',\r\n        onClick: () => setStatusFilter('DONE'),\r\n        link: 'done'\r\n    }]\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\">\r\n                <strong>{numOfTodoLeft}</strong>\r\n                <span> </span>\r\n                <span>{numOfTodoLeft <= 1 ? 'item' : 'items'}</span>\r\n                <span> left</span>\r\n            </span>\r\n            <ul className=\"filters\">\r\n                {\r\n                    filterBtns.map(btn => (\r\n                        <FilterBtn \r\n                            key={`btn${btn.title}`} \r\n                            {...btn}\r\n                        />\r\n                    ))\r\n                }\r\n              \r\n            </ul>\r\n            <button className=\"clear-completed\" onClick={clearCompleted}>Clear done</button>\r\n        </footer>\r\n\r\n    )\r\n})\r\n\r\nconst  FilterBtn = memo(props => {\r\n    const { title, onClick, link, isActive} = props\r\n    return (\r\n        <>\r\n            <li>\r\n                    <a\r\n                        href={`#/${link}`}\r\n                        className={`${isActive} 'selected' : ' '? `}\r\n                        onClick={onClick}\r\n                    >\r\n                        {title}\r\n                    </a>\r\n            </li>\r\n            <span></span>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default Footer","import React, { PureComponent } from 'react';\n//css\nimport './App.css';\nimport './css/Todo.css'\n\n//components\nimport Header from './components/Header'\nimport TodoList from './components/TodoList'\nimport Footer from './components/Footer'\n\n\nconst isNotCheckedAll = (todos = []) => todos.find(todo => !todo.isCompleted)\n\nconst filterByStatus = (todos = [], status = '', id ='') => {\n  switch (status) {\n    case 'ACTIVE' :\n      return todos.filter(todo => !todo.isCompleted)\n    case 'DONE' :\n      return todos.filter(todo => todo.isCompleted)\n    case 'REMOVE' :\n      return todos.filter(todo => todo.id !== id)\n    default:\n      return todos\n\n  }\n}\nclass App extends PureComponent {\n  state = {\n    todoList: [\n      {\n        id :1,\n        text: 'todo 1',\n        isCompleted:true\n      },\n      {\n        id :2,\n        text: 'todo 2',\n        isCompleted:false\n      }\n    ],\n    todoEditingId: '',\n    isCheckedAll: false,\n    status: 'ALL'\n  }\n\n  componentWillMount() {\n    this.setState({\n      isCheckedAll: !isNotCheckedAll(this.state.todoList)\n    })\n  }\n\n  // addTodo = (todo = {}) => {\n  //   this.setState(preState => {\n  //     \n  //   })\n  // }\n\n  addTodo = (todo = {}) => {\n    this.setState(preState => ({\n      todoList: [...preState.todoList, todo]\n    }))\n  }\n\n  getTodoEditingId =(id = '') => {\n    this.setState({ todoEditingId: id })\n  }\n\n  onEditTodo =  (todo = {}, index = -1) => {\n    if(index >= 0){\n      const { todoList: list } = this.state\n      list.splice(index, 1, todo)\n      this.setState({  \n        todoList: list,\n        todoEditingId:''\n\n      })\n      \n    }\n  }\n\n  markCompleted = (id= '') =>{\n    const { todoList } = this.state\n    const updateList = todoList.map(todo => todo.id === id ? ({...todo, isCompleted: !todo.isCompleted}) : todo )\n    this.setState(preState => ({\n      todoList: updateList,\n      isCheckedAll: !isNotCheckedAll(updateList)\n    }))\n  }\n\n  checkAllTodo = () => {\n    const { todoList, isCheckedAll } = this.state\n    this.setState(preState =>({\n      todoList : todoList.map(todo => ({...todo, isCompleted: !isCheckedAll}))\n      ,isCheckedAll:  !preState.isCheckedAll\n    }))\n  }\n\n  setStatusFilter = (status = '') => {\n    this.setState({\n      status\n    })\n  }\n\n  clearCompleted = () => {\n    const { todoList } = this.state\n    this.setState({ \n      todoList: filterByStatus(todoList, 'ACTIVE')\n    })\n  }\n\n  removeTodo = (id = '') => {\n    const { todoList } = this.state\n    this.setState({ \n      todoList: filterByStatus(todoList, 'REMOVE', id )\n    })\n  }\n  \n  render() {\n\n  const { todoList, todoEditingId, isCheckedAll, status} = this.state\n  return (\n    <div className=\"todoapp\">\n      <Header \n        addTodo={this.addTodo} \n        isCheckedAll={isCheckedAll}\n      />\n      <TodoList \n        todoList={filterByStatus(todoList, status)}\n        getTodoEditingId={this.getTodoEditingId}\n        todoEditingId={todoEditingId}\n        onEditTodo={this.onEditTodo}\n        markCompleted={this.markCompleted}\n        isCheckedAll={isCheckedAll}\n        checkAllTodo={this.checkAllTodo}\n        removeTodo={this.removeTodo}\n      />\n      <Footer\n        setStatusFilter={this.setStatusFilter}\n        status={status}\n        clearCompleted={this.clearCompleted}\n        numOfTodoLeft = {filterByStatus(todoList, status).length}\n        // numOfTodo = {todoList.length}\n        \n      />\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}